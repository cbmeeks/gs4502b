#!/bin/csh -f

set file=icachebits.vhdl

cat >$file <<EOF
library ieee;
use Std.TextIO.all;
use ieee.STD_LOGIC_1164.all;
use ieee.numeric_std.all;

-- XXX - DO NOT EDIT: This file was autogenerated using $0 $1

package icachebits is

  -- Instruction cache entries are stored in 108 bit vectors, with a number of
  -- instruction features pre-decoded, to reduce the pipeline length when using
  -- cached instructions.

EOF

set bitcount=0
    
foreach line ( `cat $1` )
    set fieldname=`echo $line | cut -f1 -d:`
    set fieldvalue=`echo $line | cut -f2 -d:`

    set start=$bitcount
    set width=$fieldvalue
    @ max = $start + $width - 1
    @ bitcount = $bitcount + $width	
    
    echo "  constant ICACHE_${fieldname}_START : integer :=${start};" >> $file
    echo "  constant ICACHE_${fieldname}_WIDTH : integer :=${width};" >> $file
    echo "  constant ICACHE_${fieldname}_MAX : integer :=${max};" >> $file	
end

if ( $bitcount > 108 ) then
   rm $file
   echo "ERROR: I-CACHE Entries too wide: must not contain more than 108 bits."
else
   @ freebits = 108 - $bitcount
   echo "OK: I-CACHE lines are $bitcount bits wide ($freebits bits free)." 
endif;
    
cat >>$file <<EOF
end icachebits;
EOF
    
